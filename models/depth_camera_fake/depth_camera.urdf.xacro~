<?xml version="1.0"?>
<robot name="depth_camera"
       xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Constants for robot dimensions -->
  <xacro:property name="camera_width" value=".1" />
  <xacro:property name="camera_length" value=".1" />
  <xacro:property name="camera_height" value=".1" />
  <xacro:property name="camera_mass" value=".1" />

  
  <!-- Macro for cuboid mass moment of inertia -->
  <xacro:macro name="cuboid_moment_of_inertia" params="m d1 d2 d3">
    <inertia ixx="${m * (d2 * d2 + d3 * d3) / 12}" ixy="0.0" ixz="0.0"
	     iyy="${m * (d1 * d1 + d3 * d3) / 12}" iyz="0.0"
	     izz="${m * (d1 * d1 + d2 * d2) / 12}" />
  </xacro:macro>
  

  
  <!-- Camera link -->
  <link name="camera_link">
    <visual name="visual">
      <geometry>
	<box size="${camera_length} ${camera_width} ${camera_height}" />
      </geometry>
    </visual>
    
    <collision name="collision">
      <geometry>
	<box size="${camera_length} ${camera_width} ${camera_height}" />
      </geometry>
    </collision>

    <inertial>
      <mass value="${camera_mass}" />
      <xacro:cuboid_moment_of_inertia m="${camera_mass}" d1="${camera_length}" d2="${camera_width}" d3="${camera_height}" />
    </inertial>

    
    <!--sensor name="camera" type="depth">
	<camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
        <width>320</width>
        <height>240</height>
        </image>
        <clip>
        <near>0.1</near>
        <far>100</far>
        </clip>
	</camera>
	<always_on>1</always_on>
	<update_rate>30</update_rate>
	<visualize>true</visualize>
	</sensor-->

    <!-- camera -->
    <!--gazebo reference="camera_link">
      <sensor type="camera" name="camera1">
	<update_rate>30.0</update_rate>
	<camera name="end_of_arm_camera">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
		 That pixel's noise value is added to each of its color
		 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
	</camera>
	<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera1</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
	</plugin>
      </sensor>
    </gazebo-->
  </link>

  <gazebo>
    <plugin name="${link_name}_controller" filename="libgazebo_ros_openni_kinect.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>1.0</updateRate>
      <cameraName>${camera_name}_ir</cameraName>
      <imageTopicName>/${camera_name}/depth/image_raw</imageTopicName>
      <cameraInfoTopicName>/${camera_name}/depth/camera_info</cameraInfoTopicName>
      <depthImageTopicName>/${camera_name}/depth/image_raw</depthImageTopicName>
      <depthImageInfoTopicName>/${camera_name}/depth/camera_info</depthImageInfoTopicName>
      <pointCloudTopicName>/${camera_name}/depth/points</pointCloudTopicName>
      <frameName>${frame_name}</frameName>
      <pointCloudCutoff>0.5</pointCloudCutoff>
      <distortionK1>0.00000001</distortionK1>
      <distortionK2>0.00000001</distortionK2>
      <distortionK3>0.00000001</distortionK3>
      <distortionT1>0.00000001</distortionT1>
      <distortionT2>0.00000001</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
    </plugin>
  </gazebo>

</robot>

